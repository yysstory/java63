/* 부동 소수점
 - 상수의 표현
   30f 또는 30F <= 4바이트 부동소수점
   30.0 또는 40.0 <= 8바이트 부동소수점
 - 부동소수점? 소수소수점이 움진인다.
   3.14 = 31.4 * 10E-1 = 314 * 10E-2 = 0.314 * 10E1 = ...
 
 부동소수점을 메모리에 저장하려면?
 - 부동 소수점을 정수 부분과 지수 부분을 분리하여 저장한다.
 - 예) 3.14 => 314(정수) * 10E-2(지수)

float => 24(정수부) + 8(지수부) => 유효 자릿수 6자리, 단정도
double => 53(정수부) + 11(지수부) => 유효 자릿수 15자리 (2배 정밀하다), 배정도 
  
 */
package java01;

public class Test09 {

  public static void main(String[] args) {
    // 부동소수점 표기 예
     float f = 3.14f;
     float f2 = 3.14F;
     float f3 = 32.4E-1f;
     float f4 = 314E-2f;
     float f5 = 0.314E1f;
    
     // 다음 값은 저장할 수는 있지만, 정수부 메모리 크기를 넘는 값은 0으로 취급한다.
     // 그래서, 정확한 값이 저정되지 않는다.
     // 오류가 발생하지 않는다 하더라도 주의하라!
     float f6 = 34028223432423423423432423400f;
     
     // 부동소수점 변수에 값을 저장할 때는
     //float x = 소수점을 뗀 6자리;
     //double y = 소수점을 뗀 15자리;
     
     
     // 주의 해야할 예
     float i = 3.14159f;
     float j = 15654.7f;
     float result = i + j; // 조심! 두 값의 더한 결과는 유효 자릿수를 넘는다.
     // result => 15657.84159
     System.out.println(result);
  }

}














